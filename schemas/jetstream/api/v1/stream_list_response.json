{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://nats.io/schemas/jetstream/api/v1/stream_list_response.json",
  "description": "A response from the JetStream $JS.API.STREAM.LIST API",
  "title": "io.nats.jetstream.api.v1.stream_list_response",
  "type": "object",
  "required": [
    "type"
  ],
  "allOf": [
    {
      "type": "object",
      "required": [
        "total",
        "offset",
        "limit"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "minimum": 0
        },
        "limit": {
          "type": "integer",
          "minimum": 0
        }
      }
    }
  ],
  "oneOf": [
    {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP like error code in the 300 to 500 range",
              "minimum": 300,
              "maximum": 699
            },
            "description": {
              "type": "string",
              "description": "A human friendly description of the error"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "streams"
      ],
      "properties": {
        "consumers": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "config",
                  "state",
                  "created"
                ],
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "The active configuration for the Stream",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "retention",
                          "max_consumers",
                          "max_msgs",
                          "max_bytes",
                          "max_age",
                          "storage",
                          "num_replicas"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "A unique name for the Stream, empty for Stream Templates.",
                            "type": "string",
                            "pattern": "^[^.*>]*$",
                            "minLength": 0
                          },
                          "subjects": {
                            "description": "A list of subjects to consume, supports wildcards. Must be empty when a mirror is configured. May be empty when sources are configured.",
                            "type": "array",
                            "minLength": 0,
                            "items": {
                              "type": "string"
                            }
                          },
                          "retention": {
                            "description": "How messages are retained in the Stream, once this is exceeded old messages are removed.",
                            "type": "string",
                            "enum": [
                              "limits",
                              "interest",
                              "workqueue"
                            ],
                            "default": "limits"
                          },
                          "max_consumers": {
                            "description": "How many Consumers can be defined for a given Stream. -1 for unlimited.",
                            "type": "integer",
                            "minimum": -1,
                            "default": -1
                          },
                          "max_msgs": {
                            "description": "How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.",
                            "type": "integer",
                            "minimum": -1,
                            "default": -1
                          },
                          "max_bytes": {
                            "description": "How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.",
                            "type": "integer",
                            "minimum": -1,
                            "default": -1
                          },
                          "max_age": {
                            "description": "Maximum age of any message in the stream, expressed in microseconds. 0 for unlimited.",
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                          },
                          "max_msg_size": {
                            "description": "The largest message that will be accepted by the Stream. -1 for unlimited.",
                            "type": "integer",
                            "minimum": -1,
                            "default": -1
                          },
                          "storage": {
                            "description": "The storage backend to use for the Stream.",
                            "type": "string",
                            "enum": [
                              "file",
                              "memory"
                            ],
                            "default": "file"
                          },
                          "num_replicas": {
                            "description": "How many replicas to keep for each message.",
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "maximum": 5
                          },
                          "no_ack": {
                            "description": "Disables acknowledging messages that are received by the Stream.",
                            "type": "boolean",
                            "default": false
                          },
                          "template_owner": {
                            "description": "When the Stream is managed by a Stream Template this identifies the template that manages the Stream.",
                            "type": "string"
                          },
                          "discard": {
                            "description": "When a Stream reach it's limits either old messages are deleted or new ones are denied",
                            "type": "string",
                            "enum": [
                              "old",
                              "new"
                            ],
                            "default": "old"
                          },
                          "duplicate_window": {
                            "description": "The time window to track duplicate messages for, expressed in microseconds. 0 for default",
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                          },
                          "placement": {
                            "description": "Placement directives to consider when placing replicas of this stream, random placement when unset",
                            "type": "object",
                            "required": [
                              "cluster"
                            ],
                            "properties": {
                              "cluster": {
                                "type": "string",
                                "description": "The desired cluster name to place the stream",
                                "minLength": 1
                              },
                              "tags": {
                                "description": "Tags required on servers hosting this stream",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "mirror": {
                            "description": "Maintains a 1:1 mirror of another stream with name matching this property.  When a mirror is configured subjects and sources must be empty.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Stream name",
                                "type": "string",
                                "pattern": "^[^.*>]+$",
                                "minLength": 1
                              },
                              "opt_start_seq": {
                                "description": "Sequence to start replicating from",
                                "type": "integer",
                                "minimum": 0
                              },
                              "opt_start_time": {
                                "description": "Time stamp to start replicating from",
                                "type": "string"
                              },
                              "filter_subject": {
                                "description": "Replicate only a subset of messages based on filter",
                                "type": "string"
                              }
                            }
                          },
                          "sources": {
                            "type": "array",
                            "description": "List of Stream names to replicate into this Stream",
                            "items": {
                              "type": "object",
                              "description": "Defines a source where streams should be replicated from",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Stream name",
                                  "type": "string",
                                  "pattern": "^[^.*>]+$",
                                  "minLength": 1
                                },
                                "opt_start_seq": {
                                  "description": "Sequence to start replicating from",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "opt_start_time": {
                                  "description": "Time stamp to start replicating from",
                                  "type": "string"
                                },
                                "filter_subject": {
                                  "description": "Replicate only a subset of messages based on filter",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "state": {
                    "type": "object",
                    "description": "Detail about the current State of the Stream",
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "messages",
                          "bytes",
                          "first_seq",
                          "last_seq",
                          "consumer_count"
                        ],
                        "properties": {
                          "messages": {
                            "type": "integer",
                            "description": "Number of messages stored in the Stream",
                            "minimum": 0
                          },
                          "bytes": {
                            "type": "integer",
                            "description": "Combined size of all messages in the Stream",
                            "minimum": 0
                          },
                          "first_seq": {
                            "type": "integer",
                            "description": "Sequence number of the first message in the Stream",
                            "minimum": 0
                          },
                          "first_ts": {
                            "type": "string",
                            "description": "The timestamp of the first message in the Stream"
                          },
                          "last_seq": {
                            "type": "integer",
                            "description": "Sequence number of the last message in the Stream",
                            "minimum": 0
                          },
                          "last_ts": {
                            "type": "string",
                            "description": "The timestamp of the last message in the Stream"
                          },
                          "deleted": {
                            "description": "IDs of messages that were deleted using the Message Delete API",
                            "type": "array",
                            "minLength": 0,
                            "items": {
                              "type": "integer",
                              "minimum": 0
                            }
                          },
                          "lost": {
                            "type": "object",
                            "description": "Records messages that were damaged and unrecoverable",
                            "properties": {
                              "msgs": {
                                "type": "integer",
                                "description": "The number of messages that were lost"
                              },
                              "bytes": {
                                "description": "The number of bytes that were lost",
                                "type": "integer"
                              }
                            }
                          },
                          "consumer_count": {
                            "type": "integer",
                            "description": "Number of Consumers attached to the Stream",
                            "minimum": 0
                          }
                        }
                      }
                    ]
                  },
                  "created": {
                    "description": "Timestamp when the stream was created",
                    "type": "string"
                  },
                  "cluster": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The cluster name"
                      },
                      "leader": {
                        "type": "string",
                        "description": "The server name of the RAFT leader"
                      },
                      "replicas": {
                        "type": "array",
                        "description": "The members of the RAFT cluster",
                        "items": {
                          "type": "object",
                          "required": [
                            "name",
                            "current",
                            "active"
                          ],
                          "properties": {
                            "name": {
                              "description": "The server name of the peer",
                              "type": "string",
                              "minimum": 1
                            },
                            "current": {
                              "description": "Indicates if the server is up to date and synchronised",
                              "type": "boolean",
                              "default": false
                            },
                            "active": {
                              "description": "Nanoseconds since this peer was last seen",
                              "type": "number"
                            },
                            "offline": {
                              "description": "Indicates the node is considered offline by the group",
                              "type": "boolean",
                              "default": false
                            },
                            "lag": {
                              "description": "How many uncommitted operations this peer is behind the leader",
                              "type": "integer",
                              "minimum": 0
                            }
                          }
                        }
                      }
                    }
                  },
                  "mirror": {
                    "required": [
                      "name",
                      "lag",
                      "active"
                    ],
                    "type": "object",
                    "description": "Information about an upstream stream source in a mirror",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the Stream being replicated"
                      },
                      "lag": {
                        "type": "number",
                        "description": "How many messages behind the mirror operation is",
                        "minimum": 0
                      },
                      "active": {
                        "type": "number",
                        "description": "When last the mirror had activity, in nanoseconds",
                        "minimum": 0
                      },
                      "error": {
                        "type": "object",
                        "required": [
                          "code"
                        ],
                        "properties": {
                          "code": {
                            "type": "integer",
                            "description": "HTTP like error code in the 300 to 500 range",
                            "minimum": 300,
                            "maximum": 699
                          },
                          "description": {
                            "type": "string",
                            "description": "A human friendly description of the error"
                          }
                        }
                      }
                    }
                  },
                  "sources": {
                    "type": "array",
                    "description": "Streams being sourced into this Stream",
                    "items": {
                      "required": [
                        "name",
                        "lag",
                        "active"
                      ],
                      "type": "object",
                      "description": "Information about an upstream stream source in a mirror",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the Stream being replicated"
                        },
                        "lag": {
                          "type": "number",
                          "description": "How many messages behind the mirror operation is",
                          "minimum": 0
                        },
                        "active": {
                          "type": "number",
                          "description": "When last the mirror had activity, in nanoseconds",
                          "minimum": 0
                        },
                        "error": {
                          "type": "object",
                          "required": [
                            "code"
                          ],
                          "properties": {
                            "code": {
                              "type": "integer",
                              "description": "HTTP like error code in the 300 to 500 range",
                              "minimum": 300,
                              "maximum": 699
                            },
                            "description": {
                              "type": "string",
                              "description": "A human friendly description of the error"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "properties": {
    "type": {
      "type": "string",
      "const": "io.nats.jetstream.api.v1.stream_list_response"
    }
  }
}
