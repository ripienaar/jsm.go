{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://nats.io/schemas/jetstream/api/v1/consumer_list_response.json",
  "description": "A response from the JetStream $JS.API.CONSUMER.LIST API",
  "title": "io.nats.jetstream.api.v1.consumer_list_response",
  "type": "object",
  "required": [
    "type"
  ],
  "allOf": [
    {
      "type": "object",
      "required": [
        "total",
        "offset",
        "limit"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "minimum": 0
        },
        "limit": {
          "type": "integer",
          "minimum": 0
        }
      }
    }
  ],
  "oneOf": [
    {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP like error code in the 300 to 500 range",
              "minimum": 300,
              "maximum": 699
            },
            "description": {
              "type": "string",
              "description": "A human friendly description of the error"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "consumers"
      ],
      "properties": {
        "consumer": {
          "required": [
            "stream_name",
            "name",
            "config",
            "created",
            "delivered",
            "ack_floor",
            "num_ack_pending",
            "num_redelivered",
            "num_waiting",
            "num_pending"
          ],
          "type": "object",
          "properties": {
            "stream_name": {
              "type": "string",
              "description": "The Stream the consumer belongs to"
            },
            "name": {
              "type": "string",
              "description": "A unique name for the consumer, either machine generated or the durable name"
            },
            "config": {
              "required": [
                "deliver_policy",
                "ack_policy",
                "replay_policy"
              ],
              "allOf": [
                {
                  "oneOf": [
                    {
                      "required": [
                        "deliver_policy"
                      ],
                      "properties": {
                        "deliver_policy": {
                          "type": "string",
                          "enum": [
                            "all"
                          ]
                        }
                      }
                    },
                    {
                      "required": [
                        "deliver_policy"
                      ],
                      "properties": {
                        "deliver_policy": {
                          "type": "string",
                          "enum": [
                            "last"
                          ]
                        }
                      }
                    },
                    {
                      "required": [
                        "deliver_policy"
                      ],
                      "properties": {
                        "deliver_policy": {
                          "type": "string",
                          "enum": [
                            "new"
                          ]
                        }
                      }
                    },
                    {
                      "required": [
                        "deliver_policy",
                        "opt_start_seq"
                      ],
                      "properties": {
                        "deliver_policy": {
                          "type": "string",
                          "enum": [
                            "by_start_sequence"
                          ]
                        },
                        "opt_start_seq": {
                          "type": "integer",
                          "minimum": 0
                        }
                      }
                    },
                    {
                      "required": [
                        "deliver_policy",
                        "opt_start_time"
                      ],
                      "properties": {
                        "deliver_policy": {
                          "type": "string",
                          "enum": [
                            "by_start_time"
                          ]
                        },
                        "opt_start_time": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              ],
              "properties": {
                "durable_name": {
                  "description": "A unique name for a durable consumer",
                  "type": "string",
                  "pattern": "^[^.*>]+$",
                  "minLength": 1
                },
                "deliver_subject": {
                  "type": "string",
                  "minLength": 1
                },
                "ack_policy": {
                  "type": "string",
                  "enum": [
                    "none",
                    "all",
                    "explicit"
                  ]
                },
                "ack_wait": {
                  "description": "How long (in nanoseconds) to allow messages to remain un-acknowledged before attempting redelivery",
                  "type": "integer",
                  "minimum": 1
                },
                "max_deliver": {
                  "type": "integer"
                },
                "filter_subject": {
                  "type": "string"
                },
                "replay_policy": {
                  "type": "string",
                  "enum": [
                    "instant",
                    "original"
                  ]
                },
                "sample_freq": {
                  "type": "string"
                },
                "rate_limit_bps": {
                  "type": "integer",
                  "description": "The rate at which messages will be delivered to clients, expressed in bit per second",
                  "minimum": 0
                },
                "max_ack_pending": {
                  "type": "integer",
                  "description": "The maximum number of messages without acknowledgement that can be outstanding, once this limit is reached message delivery will be suspended"
                }
              }
            },
            "created": {
              "type": "string"
            },
            "delivered": {
              "description": "The last message delivered from this Consumer",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "consumer_seq",
                "stream_seq"
              ],
              "properties": {
                "consumer_seq": {
                  "type": "integer",
                  "description": "The sequence number of the Consumer",
                  "minimum": 0
                },
                "stream_seq": {
                  "type": "integer",
                  "description": "The sequence number of the Stream",
                  "minimum": 0
                }
              }
            },
            "ack_floor": {
              "description": "The highest contiguous acknowledged message",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "consumer_seq",
                "stream_seq"
              ],
              "properties": {
                "consumer_seq": {
                  "type": "integer",
                  "description": "The sequence number of the Consumer",
                  "minimum": 0
                },
                "stream_seq": {
                  "type": "integer",
                  "description": "The sequence number of the Stream",
                  "minimum": 0
                }
              }
            },
            "num_ack_pending": {
              "description": "The number of messages pending acknowledgement",
              "type": "integer",
              "minimum": 0
            },
            "num_redelivered": {
              "description": "The number of redeliveries that have been performed",
              "type": "integer",
              "minimum": 0
            },
            "num_waiting": {
              "description": "The number of pull consumers waiting for messages",
              "type": "integer",
              "minimum": 0
            },
            "num_pending": {
              "description": "The number of messages left unconsumed in this Consumer",
              "type": "integer",
              "minimum": 0
            },
            "cluster": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The cluster name"
                },
                "leader": {
                  "type": "string",
                  "description": "The server name of the RAFT leader"
                },
                "replicas": {
                  "type": "array",
                  "description": "The members of the RAFT cluster",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "current",
                      "active"
                    ],
                    "properties": {
                      "name": {
                        "description": "The server name of the peer",
                        "type": "string",
                        "minimum": 1
                      },
                      "current": {
                        "description": "Indicates if the server is up to date and synchronised",
                        "type": "boolean",
                        "default": false
                      },
                      "active": {
                        "description": "Nanoseconds since this peer was last seen",
                        "type": "number"
                      },
                      "offline": {
                        "description": "Indicates the node is considered offline by the group",
                        "type": "boolean",
                        "default": false
                      },
                      "lag": {
                        "description": "How many uncommitted operations this peer is behind the leader",
                        "type": "integer",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "properties": {
    "type": {
      "type": "string",
      "const": "io.nats.jetstream.api.v1.consumer_list_response"
    }
  }
}
